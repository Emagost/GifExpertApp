{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACnC,OACI,sBAAKc,UAAU,yCAAf,UACQ,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAASC,GACAwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGzB,CAAEpB,IAEEqB,EDb2BK,CAAc1B,GAAnCa,EAAb,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,oBAAIJ,UAAU,mCAAd,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAEKA,GADGA,EAAIC,aEfvBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,eAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADPA,Y,MCfjC4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.91c9cb88.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2){\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=uMmbJMSSc1X2KPsdKbAdWzDy8o0U0juX`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={ url } alt={ title }/>\r\n                <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n        { loading && <h5 className=\"animate__animated animate__flash\">Loading...</h5> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( img => (\r\n                        <GifGridItem \r\n                        key = { img.id }\r\n                        { ...img }\r\n                        />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs( category )\r\n                .then( imgs=>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n            });\r\n    }, [ category ])\r\n\r\n    return state\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['The Office']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category= { category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>   \r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}